{"version":3,"sources":["algorithms/pathfinder/PathFinder.js","games/tic_tac_toe/Square.js","games/tic_tac_toe/Board.js","games/tic_tac_toe/Tic_Tac_Toe.js","games/tic_tac_toe/helper.js","games/tic_tac_toe/computer.js","games/snake/Tile.js","games/snake/Food.js","games/snake/Field.js","games/snake/interval.js","games/snake/Snake.js","other/calculator/Calculator.js","selectionWindow/projectSelection.js","store/actions.js","store/actionTypes.js","selectionWindow/aboutMe.js","selectionWindow/selectionMask.js","App.js","serviceWorker.js","store/reducers/selectionReducer.js","store/reducers/projectSelectionReducer.js","index.js"],"names":["leaveButtonStyle","height","width","fontSize","fontWeight","border","zIndex","marginTop","marginRight","position","headerStyle","marginLeft","PathFinder","props","style","className","onClick","activatePathFinder","Square","value","Board","squares","map","square","i","key","gameModeStyle","borderRadius","background","color","outline","boxShadow","padding","buttonStyle","restartButtonStyleOff","restartButtonStyleOn","xStyle","margin","oStyle","xoContainer","invinsibleBorder","restart","TicTacToe","useState","Array","fill","history","setHistory","Math","random","xIsNext","setXIsNext","count","setCount","twoPlayerMode","setTwoPlayerMode","vsComputerMode","setVSComputerMode","choosePlayer","setChoosePlayer","youAre","setYouAre","winner","lines","length","a","b","c","calculateWinner","xO","arr","place","randomNumber","floor","setPlayer","restartGame","playerChosen","e","target","gameStand","choose","yourPlayer","selectedTTT","Tile","snakeCoodinates","Food","foodCoordinates","Field","gameField","food","field","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","gameWindow","youDiedStyle","pointsStyle","Snake","snakePos","setSnakePos","ceil","foodCoos","setFoodCoos","isRunning","setIsRunning","points","setPoints","speed","setSpeed","gameLost","setGameLost","direction","setDirection","startGame","loseGame","increaseSnake","oldSnake","copy","push","setGameParams","moveSnake","arrayOne","arrayTwo","eatFood","maintainSnakeOrder","snake","selfCollision","handleDirection","event","keyCode","preventDefault","window","addEventListener","removeEventListener","youDied","startNStop","activateSnake","calContainer","paddingBottom","paddingTop","backgroundColor","textAreaStyle","resize","cStyle","Calculator","setField","typeIn","slice","trim","castToArray","string","charAt","parseInt","substring","replace","console","log","isNaN","includes","parseFloat","filter","x","floatify","activateCalc","result","toString","perfromCalc","returnResult","selecetionStyle","projectOne","justifyContent","projectTwo","projectThree","projectFour","itemHeaderStyle","projectWindow","connect","state","projectChoices","project","tttSelected","snakeActive","calcActive","pathFinderActive","dispatch","type","showContact","contact","document","getElementById","AboutMeSection","href","showProjectSection","selection","showAboutMeSection","showContanctSection","projectSelected","aboutMeSelected","contactSelected","selectedSection","undefined","selectionStyle","top","appStyle","overflow","App","Boolean","location","hostname","match","selectionInitialState","showContactSection","projectSelectionInitialState","rootReducer","combineReducers","action","store","createStore","getState","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dd345875.chunk.js","sourcesContent":["import React,{useState } from \"react\"\r\nimport './pathFinderStyle.css'\r\n\r\nconst leaveButtonStyle = {\r\n    height: \"30px\",\r\n    width: \"70px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"bolder\",\r\n    border: \"none\",\r\n    zIndex: 6,\r\n    marginTop: \"-40px\",\r\n    marginRight: \"0px\",\r\n    position: \"relative\",\r\n\r\n}\r\n\r\nconst headerStyle = {\r\n    position: \"relative\",\r\n    marginLeft: \"75px\",\r\n}\r\n\r\n\r\n\r\nconst PathFinder = (props) =>{\r\n    return(\r\n        <div>\r\n            <h1 style={headerStyle}>Work in Progress</h1>\r\n             <div>\r\n                <button style={leaveButtonStyle} className=\"float-right\" onClick={props.activatePathFinder}> back</button>\r\n            </div>\r\n            <div className=\"work\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PathFinder;","  \r\nimport React from \"react\";\r\n\r\nconst Square = ({ value, onClick }) => {\r\n  const style = value ? `squares ${value}` : `squares`;\r\n  return (\r\n    <button className={style} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Square;","import React from \"react\";\r\nimport Square from \"./Square\";\r\nimport './TicTacToeStyle.css'\r\n\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n  <div className=\"board\">\r\n    {squares.map((square, i) => (\r\n      <Square key={i} value={square} onClick={() => onClick(i)} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Board;","import React, {useState } from \"react\";\r\nimport Board from './Board';\r\nimport { setPlayer } from \"./computer\";\r\nimport { calculateWinner } from './helper'\r\n\r\n\r\n\r\n/*--------------------------------------------------------\r\n  -######################################################- \r\n  -                        STYLE                         - \r\n  -######################################################-  \r\n  --------------------------------------------------------*/\r\n\r\n\r\nconst leaveButtonStyle = {\r\n  height: \"30px\",\r\n  width: \"70px\",\r\n  fontSize: \"12px\",\r\n  fontWeight: \"bolder\",\r\n  border: \"none\",\r\n\r\n}\r\n\r\nconst gameModeStyle = {\r\n  borderRadius: \"5px\",\r\n  background: \"#00e600\",\r\n  color: \"white\",\r\n  border: \"none \",\r\n  outline: \"none \",\r\n  boxShadow: \"2px 2px 4px #404040 inset\",\r\n  padding: \"2px\",\r\n}\r\n\r\nconst buttonStyle = {\r\n  borderRadius: \"5px\",\r\n  background: \"#8c8c8c\",\r\n  color: \"white\",\r\n  border: \"none \",\r\n  outline: \"none \",\r\n  padding: \"2px\",\r\n  boxShadow: \"-1px -1px 3px #404040\",\r\n}\r\n\r\nconst restartButtonStyleOff = {\r\n  borderRadius: \"5px\",\r\n  background: \"#8c8c8c\",\r\n  color: \"white\",\r\n  border: \"none \",\r\n  outline: \"none \",\r\n  boxShadow: \"2px 2px 4px #404040 inset\",\r\n  padding: \"2px\",\r\n}\r\n\r\nconst restartButtonStyleOn = {\r\n  borderRadius: \"5px\",\r\n  background: \"#00e600\",\r\n  color: \"white\",\r\n  border: \"none \",\r\n  outline: \"none \",\r\n  boxShadow: \"-2px -2px 4px #404040\",\r\n  padding: \"2px\",\r\n}\r\n\r\n\r\nconst xStyle = {\r\n  borderRadius: \"5px\",\r\n  background: \"#8c8c8c\",\r\n  color: \"red\",\r\n  border: \"none \",\r\n  outline: \"none \",\r\n  padding: \"2px\",\r\n  width: \"120px\",\r\n  height: \"35px\",\r\n  margin: \"10px\",\r\n  fontSize: \"25x\",\r\n  fontWeight: \"bold\",\r\n  boxShadow: \"-2px -2px 5px #0d0d0d\",\r\n}\r\n\r\nconst oStyle = {\r\n  borderRadius: \"5px\",\r\n  background: \"#8c8c8c\",\r\n  color: \"green\",\r\n  border: \"none \",\r\n  outline: \"none \",\r\n  padding: \"2px\",\r\n  width: \"120px\",\r\n  height: \"35px\",\r\n  margin: \"10px\",\r\n  fontSize: \"25x\",\r\n  fontWeight: \"bold\",\r\n  boxShadow: \"-2px -2px 5px #0d0d0d\",\r\n}\r\n\r\n\r\nconst xoContainer = {\r\n  width: \"400px\",\r\n  height: \"275px\",\r\n  background: \"#333333\",\r\n  marginTop: \"150px\",\r\n  marginLeft: \"50px\",\r\n  borderRadius: \"10px\",\r\n  color: \"#e6e6e6\"\r\n}\r\n\r\nconst invinsibleBorder = {\r\n  width: \"500px\",\r\n  height: \"700px\",\r\n}\r\n\r\nlet restart = restartButtonStyleOff;\r\n\r\n/*--------------------------------------------------------------------*/\r\n\r\n\r\nconst TicTacToe = (props) => {\r\n  const [history, setHistory] = useState(Array(9).fill(\"\"));\r\n  const [xIsNext, setXIsNext] = useState((Math.random() > 0.5));\r\n  const [count, setCount] = useState(0);\r\n  const [twoPlayerMode, setTwoPlayerMode] = useState(true);\r\n  const [vsComputerMode, setVSComputerMode] = useState(false);\r\n  const [choosePlayer, setChoosePlayer] = useState(false);\r\n  const [youAre, setYouAre] = useState(\"\");\r\n  const winner = calculateWinner(history, count);\r\n  const xO = xIsNext ? \"X\" : \"O\";\r\n\r\n  const handleClick = (i) => {\r\n    let squares = [...history]\r\n    if (winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = xO;\r\n    setHistory(squares)\r\n    setXIsNext(!xIsNext);\r\n    setCount(count + 1)\r\n  }\r\n\r\n  if (youAre != \"\" && xO != youAre && !winner) {\r\n    let squares = [...history];\r\n    squares[setPlayer(squares)] = xO\r\n    setHistory(squares)\r\n    setXIsNext(!xIsNext);\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const restartGame = () => {\r\n    setCount(0);\r\n    setHistory(Array(9).fill(\"\"))\r\n    setXIsNext((Math.random() > 0.5));\r\n    restart = restartButtonStyleOff;\r\n  }\r\n\r\n  const activateTwoPlayer = () => {\r\n    setTwoPlayerMode(true);\r\n    setChoosePlayer(false);\r\n    setYouAre(\"\")\r\n    restartGame();\r\n  }\r\n\r\n  const activateVsComputer = () => {\r\n    setTwoPlayerMode(false);\r\n    setChoosePlayer(true)\r\n    setVSComputerMode(true)\r\n    restartGame();\r\n  }\r\n\r\n  const playerChosen = (e) => {\r\n    setChoosePlayer(false);\r\n    setXIsNext((Math.random() > 0.5));\r\n    setYouAre(e.target.value);\r\n  }\r\n\r\n  let gameStand = null;\r\n  if (winner === \"TIE\") {\r\n    gameStand =\r\n      <div>\r\n        <h3 className=\"mt-3\" >TIE</h3>\r\n      </div>\r\n    restart = restartButtonStyleOn;\r\n  } else if (winner === \"X\" || winner === \"O\") {\r\n    gameStand =\r\n      <div>\r\n        <h3 className=\"mt-3\" > THE WINNER IS {winner}</h3>\r\n      </div>\r\n    restart = restartButtonStyleOn;\r\n  }\r\n\r\n\r\n\r\n  let choose = null;\r\n  if (choosePlayer) {\r\n    choose =\r\n      <div style={invinsibleBorder} className=\"flex-colum text-center position-absolute justify-content-center\">\r\n        <div style={xoContainer} className=\"flex-colum text-center position-absolute justify-content-center\">\r\n          <button onClick={e => playerChosen(e)} value=\"X\" className=\"p-2  mt-5\" style={xStyle}>X</button>\r\n          <button onClick={e => playerChosen(e)} value=\"O\" className=\"p-2  mt-5 \" style={oStyle}>O</button>\r\n          <h3 className=\" p-2 mt-5\">CHOOSE YOUR PLAYER</h3>\r\n        </div>\r\n      </div>\r\n  } if (!choosePlayer) {\r\n    choose = <div></div>;\r\n  }\r\n\r\n  if (vsComputerMode) {\r\n    var yourPlayer =\r\n      <div>\r\n        <h3 className=\"mt-3\" >You are {youAre}</h3>\r\n      </div>\r\n  } if (twoPlayerMode) {\r\n    yourPlayer = <div></div>;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"text-center\" >\r\n      <div>\r\n        <button style={leaveButtonStyle} className=\"float-right position-relative\" onClick={props.selectedTTT}> back -></button>\r\n      </div>\r\n      {choose}\r\n      <h1 className=\"mb-3\" >Tic Tac Toe</h1>\r\n      <Board squares={history} onClick={handleClick} />\r\n      <div>\r\n        <button style={twoPlayerMode ? gameModeStyle : buttonStyle} className=\"m-3 pl-1 pr-1\" onClick={activateTwoPlayer}>2 PLAYER</button>\r\n        <button style={twoPlayerMode ? buttonStyle : gameModeStyle} className=\"m-3 pl-1 pr-1\" onClick={activateVsComputer}>VS COMPUTER</button>\r\n        <button style={restart} className=\"m-3 pl-1 pr-1\" onClick={restartGame}>RESTART</button>\r\n      </div>\r\n      <div>\r\n        {gameStand}\r\n      </div>\r\n      <div>\r\n        {yourPlayer}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default TicTacToe;","export function calculateWinner(squares, count) {\r\n  const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n  if(count == 9){\r\n    return \"TIE\"\r\n  }\r\n \r\n}\r\n\r\n\r\n","export function setPlayer(arr) {\r\n  let place = \"\";\r\n  let randomNumber = 0;\r\n  while(place === \"\"){\r\n    randomNumber = Math.floor(Math.random() * 10)\r\n    if(arr[randomNumber] === \"\"){\r\n      place = randomNumber; \r\n    }\r\n  } \r\n  return place;     \r\n}","import React from 'react';\r\n\r\n\r\n\r\nconst Tile = (snakeCoodinates) =>{\r\n    const size = 10;\r\n    const style = {\r\n      width: size,\r\n      height: size,\r\n      background: \"white\",\r\n      border: \"0.1px solid grey\",\r\n      marginLeft: (snakeCoodinates.value[0] * size),\r\n      marginTop: (snakeCoodinates.value[1] * size),\r\n      zIndex: 1,\r\n      \r\n    }\r\n  \r\n    return(\r\n        <div style = {style} className=\"position-absolute\"></div>\r\n    )\r\n}\r\n\r\nexport default Tile;","import React from 'react';\r\n\r\n\r\n\r\nconst Food = (foodCoordinates) => {\r\n    const size = 10;\r\n    const style = {\r\n        width: size,\r\n        height: size,\r\n        background: \"red\",\r\n        marginLeft: (foodCoordinates.value[0] * size),\r\n        marginTop: (foodCoordinates.value[1] * size),\r\n        zIndex: 0,\r\n        borderRadius: \"3.5px\"\r\n    }\r\n    return (\r\n        <div style = {style} className=\"position-absolute\"></div>\r\n    )\r\n}\r\n\r\nexport default Food;","import React from 'react';\r\nimport Tile from './Tile';\r\nimport Food from './Food';\r\n\r\nconst style = {\r\n  width: \"660px\",\r\n  height: \"461px\",\r\n  border: \"1px solid grey\",\r\n  background: \"black\",\r\n  marginTop: \"-20px\",\r\n  zIndex: 3,\r\n}\r\n\r\nconst Field = ({ gameField, food }) => (\r\n  <div style={style}>\r\n    {gameField.map((field, i) => (\r\n      <Tile key={i} value={field} />\r\n    ))}\r\n    <Food value={food} />\r\n  </div>\r\n)\r\n\r\nexport default Field;","import React, {useEffect, useRef } from 'react';\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\n\r\nexport default useInterval;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Field from './Field';\r\nimport useInterval from './interval';\r\nimport './snakeStyle.css'\r\n\r\n\r\n\r\n/*--------------------------------------------------------\r\n  -######################################################- \r\n  -                        STYLE                         - \r\n  -######################################################-  \r\n  --------------------------------------------------------*/\r\n\r\n\r\nconst gameWindow = {\r\n    marginTop: \"100px\",\r\n}\r\n\r\n\r\nconst leaveButtonStyle = {\r\n    height: \"30px\",\r\n    width: \"70px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"bolder\",\r\n    border: \"none\",\r\n    zIndex: 6,\r\n    marginTop: \"-50px\"\r\n}\r\n\r\nconst youDiedStyle = {\r\n    fontSize: \"75px\",\r\n    color: \"#b30000\",\r\n    marginLeft: \"160px\",\r\n    marginTop: \"170px\",\r\n}\r\n\r\nconst buttonStyle = {\r\n    zIndex: 4,\r\n    position: \"relative\",\r\n    marginTop: \"5px\",\r\n    marginRight: \"10px\",\r\n}\r\n\r\nconst pointsStyle = {\r\n    zIndex: 5,\r\n    position: \"absolute\",\r\n    marginTop: \"-45px\",\r\n}\r\n\r\n/*--------------------------------------------------------------------*/\r\n\r\nconst Snake = (props) => {\r\n    const [snakePos, setSnakePos] = useState([[32, 22]]);\r\n    const [foodCoos, setFoodCoos] = useState([Math.ceil(Math.random() * 33), Math.ceil(Math.random() * 23)]) //[Math.ceil(Math.random() * 41), Math.ceil(Math.random() * 31) ]\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [points, setPoints] = useState(0);\r\n    const [speed, setSpeed] = useState(260);\r\n    const [gameLost, setGameLost] = useState(false);\r\n    const [direction, setDirection] = useState(\"\")\r\n\r\n\r\n    const gameLoop = () => {\r\n        loseGame(gameLost)\r\n        if (!gameLost) {\r\n            moveSnake()\r\n        }\r\n    }\r\n\r\n    const startGame = () => {\r\n        setIsRunning(!isRunning)\r\n    }\r\n\r\n    const restartGame = () => {\r\n        setIsRunning(false);\r\n        setSpeed(280);\r\n        setPoints(0);\r\n        setSnakePos([[32, 22]]);\r\n        setFoodCoos([Math.ceil(Math.random() * 33), Math.ceil(Math.random() * 23)]);\r\n        setGameLost(false);\r\n        setDirection(\"\")\r\n    }\r\n\r\n    const loseGame = (gameLost) => {\r\n        if (gameLost) {\r\n            startGame();\r\n        }\r\n    }\r\n\r\n    function eatFood(oldSnake, copy, arrayOne, arrayTwo) {\r\n        if (arrayOne[0] === arrayTwo[0] && arrayOne[1] === arrayTwo[1]) {\r\n            setGameParams();\r\n            increaseSnake(oldSnake, copy);\r\n        }\r\n    }\r\n\r\n    const selfCollision = (snake) => {\r\n        for (let i = 1; i < snake.length; i++) {\r\n            if (snake[0][0] === snake[i][0] && snake[0][1] === snake[i][1]) {\r\n                setGameLost(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const outOfField = (arrayOne) => {\r\n        if (arrayOne[0][0] >= 66 || arrayOne[0][0] < 0 || arrayOne[0][1] >= 46 || arrayOne[0][1] < 0) {\r\n            setGameLost(true);\r\n        }\r\n    }\r\n\r\n    const increaseSnake = (oldSnake, copy) => {\r\n        copy.push(oldSnake);\r\n        return copy;\r\n    }\r\n\r\n    const maintainSnakeOrder = (arr) => {\r\n        for (let i = arr.length - 1; i > 0; i--) {\r\n            arr[i] = [...arr[i - 1]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    const setGameParams = () => {\r\n        let copy = [0, 0];\r\n        copy[0] = Math.ceil(Math.random() * 31)\r\n        copy[1] = Math.ceil(Math.random() * 41);\r\n        setFoodCoos(copy);\r\n        setPoints(Math.ceil((points + 1.5) * 1.1 * 1.2))\r\n        if (speed - ((points / 2) * 0.02) < 140) {\r\n            setSpeed(140)\r\n        } else {\r\n            setSpeed(speed - ((points / 2) * 0.02))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const moveSnake = () => {\r\n        let copy = [...snakePos];\r\n        eatFood(copy[copy.length - 1], copy, copy[0], foodCoos);\r\n        copy = maintainSnakeOrder(copy)\r\n        switch (direction) {\r\n            case \"right\":\r\n                copy[0][0] += 1;\r\n                break;\r\n            case \"left\":\r\n                copy[0][0] -= 1;\r\n                break;\r\n            case \"up\":\r\n                copy[0][1] -= 1;\r\n                break;\r\n            case \"down\":\r\n                copy[0][1] += 1;\r\n                break;\r\n            default:\r\n                copy[0][0] += 1;\r\n        }\r\n        setSnakePos(copy);\r\n        outOfField(copy);\r\n        selfCollision(copy);\r\n    }\r\n\r\n    useInterval(() => {\r\n        gameLoop()\r\n    }, isRunning ? speed : null);\r\n\r\n\r\n    useEffect(() => {\r\n        const handleDirection = (event) => {\r\n            switch (event.keyCode) {\r\n                case 38:\r\n                    event.preventDefault();\r\n                    setDirection(\"up\")\r\n                    break;\r\n                case 37:\r\n                    event.preventDefault();\r\n                    setDirection(\"left\")\r\n                    break;\r\n                case 39:\r\n                    event.preventDefault();\r\n                    setDirection(\"right\")\r\n                    break;\r\n                case 40:\r\n                    event.preventDefault();\r\n                    setDirection(\"down\")\r\n                    break;\r\n                default:\r\n                    setDirection(\"right\")\r\n            }\r\n        };\r\n        window.addEventListener('keydown', handleDirection);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleDirection);\r\n        };\r\n    }, []);\r\n\r\n\r\n    let youDied = gameLost ? \"YOU DIED\" : null;\r\n    let startNStop = isRunning ? \"STOP\" : \"START\";\r\n    return (\r\n        <div style={gameWindow}>\r\n            <div>\r\n                <button style={leaveButtonStyle} className=\"float-right position-relative\" onClick={props.activateSnake}> back -></button>\r\n            </div>\r\n            <div>\r\n                <h5 style={pointsStyle}>Points {points}</h5>\r\n                <h5 style={pointsStyle}>Points {points}</h5>\r\n            </div>\r\n            <div className=\"overlayer\"></div>\r\n            <div style={youDiedStyle} className=\"position-absolute\">{youDied}</div>\r\n            <Field gameField={snakePos} food={foodCoos} />\r\n            <button style={buttonStyle} onClick={startGame}>{startNStop}</button>\r\n            <button style={buttonStyle} onClick={restartGame}>RESTART</button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Snake","import React, { useState } from \"react\";\r\nimport './calcStyle.css'\r\n\r\nconst calContainer = {\r\n    width: \"260px\",\r\n    height: \"300px\",\r\n    padding: \"20px\",\r\n    paddingBottom: \"50px\",\r\n    paddingTop: \"40px\",\r\n    marginTop: \"100px\",\r\n    borderRadius: \"1px\",\r\n    backgroundColor: \"#9966ff\",\r\n}\r\n\r\nconst textAreaStyle = {\r\n    resize: \"none\",\r\n    height: \"30px\",\r\n    width: \"162px\",\r\n    border: \"0.5px solid grey\",\r\n    borderRadius: \"2px\",\r\n    padding: \"4px\",\r\n    backgroundColor: \"white\",\r\n    \r\n}\r\n\r\nconst cStyle = {\r\n    height: \"30px\",\r\n    width: \"30px\"\r\n\r\n}\r\n\r\nconst leaveButtonStyle = {\r\n    height: \"30px\",\r\n    width: \"70px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"bolder\",\r\n    border: \"none\",\r\n    position: \"absolute\",\r\n    marginTop: \"106px\",\r\n    marginLeft: \"175px\"\r\n}\r\n\r\nconst Calculator = (props) => {\r\n    const [field, setField] = useState(\"\");\r\n\r\n    const typeIn = (value) => {\r\n        let copy = \" \" + field.slice(0)\r\n        copy = copy.trim(\"\");\r\n        if (copy.length < 16) {\r\n            copy += value;\r\n        }\r\n        setField(copy)\r\n    }\r\n\r\n    const clear = () => {\r\n        let copy = \"\";\r\n        setField(copy)\r\n    }\r\n\r\n    const removeLast = () => {\r\n        let copy = field;\r\n        setField(copy.substring(0, copy.length - 1))\r\n    }\r\n\r\n    const perfromCalc = (arr) => {\r\n        let i = 0;\r\n        while (arr.includes(\"*\") || arr.includes(\"/\")) {\r\n            if (arr[i] === \"*\") {\r\n                arr[i] = arr[i - 1] * arr[i + 1];\r\n                arr[i - 1] = \"\";\r\n                arr[i + 1] = \"\";\r\n            }\r\n            if (arr[i] === \"/\") {\r\n                arr[i] = arr[i - 1] / arr[i + 1];\r\n                arr[i - 1] = \"\";\r\n                arr[i + 1] = \"\";\r\n            }\r\n            arr = arr.filter(x => x !== \"\");\r\n            i++;\r\n            if (i > arr.length) {\r\n                i = 0;\r\n            }\r\n        }\r\n\r\n        while (arr.includes(\"+\") || arr.includes(\"-\")) {\r\n            if (arr[i] === \"+\") {\r\n                arr[i] = arr[i - 1] + arr[i + 1];\r\n                arr[i - 1] = \"\";\r\n                arr[i + 1] = \"\";\r\n            }\r\n            if (arr[i] === \"-\") {\r\n                arr[i] = arr[i - 1] - arr[i + 1];\r\n                arr[i - 1] = \"\";\r\n                arr[i + 1] = \"\";\r\n            }\r\n            arr = arr.filter(x => x !== \"\");\r\n            i++;\r\n            if (i > arr.length) {\r\n                i = 0;\r\n            }\r\n        }\r\n\r\n        return arr.toString() === \"NaN\" ? \"Error\" : arr.toString();\r\n    }\r\n\r\n\r\n    const floatify = (arr) => {\r\n        if (!arr.includes(\".\")) {\r\n            return arr;\r\n        }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] === \".\") {\r\n                arr[i] = parseFloat(arr[i - 1] + arr[i] + arr[i + 1]);\r\n                arr[i - 1] = \"\";\r\n                arr[i + 1] = \"\";\r\n            }\r\n        }\r\n        return arr.filter(x => x !== \"\");\r\n    }\r\n\r\n    const castToArray = (string) => {\r\n        let count = 0;\r\n        let i = 0;\r\n        let copy = string;\r\n        let arr = [];\r\n        if (copy.charAt(0) === \"-\") {\r\n            arr.push(parseInt(copy.substring(0, 2)));\r\n            arr.push(copy.charAt(2));\r\n            copy = copy.replace(copy.substring(0, 3), '')\r\n        }\r\n        console.log()\r\n        while (copy !== '') {\r\n            if (isNaN(copy.charAt(i))) {\r\n                arr.push(parseInt(copy.substring(0, count)));\r\n                arr.push(copy.charAt(i))\r\n                copy = copy.replace(copy.substring(0, count + 1), '')\r\n                count = 0;\r\n                i = 0;\r\n            }\r\n            if (count === copy.length) {\r\n                arr.push(parseInt(copy.substring(0, count)));\r\n                copy = copy.replace(copy.substring(0, count + 1), '')\r\n            }\r\n            if (!isNaN(copy.charAt(i))) {\r\n                count++;\r\n            }\r\n            i++;\r\n        }\r\n        console.log(arr)\r\n        return floatify(arr);\r\n    }\r\n\r\n    const returnResult = (string) => {\r\n        let copy = string.trim(\" \");\r\n        let result = perfromCalc(castToArray(copy))\r\n        if(result.length < 16){\r\n            setField(result)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button style={leaveButtonStyle} className=\"calcButton\" onClick={props.activateCalc}> back -></button>\r\n            </div>\r\n            <div className=\"calculator\" style={calContainer}>\r\n                <div className=\"row text\" >\r\n                    <button style={cStyle} id=\"clear\" className=\"m-1 text-center \" onClick={clear}>c</button>\r\n                    <button style={cStyle} id=\"delete\" className=\"m-1 text-center \" onClick={removeLast}>&#171;</button>\r\n                    <div style={textAreaStyle} className=\"m-1 text-right textField \" >{field}</div>\r\n                </div>\r\n                <div className=\"row h-25\">\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(7)}>7</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(8)}>8</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(9)}>9</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(\"-\")}>-</button>\r\n                </div>\r\n                <div className=\"row h-25\">\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(4)}>4</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(5)}>5</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(6)}>6</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(\"+\")}>+</button>\r\n                </div>\r\n                <div className=\"row h-25\">\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(1)}>1</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(2)}>2</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(3)}>3</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(\"*\")}>*</button>\r\n                </div>\r\n                <div className=\"row h-25\">\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(0)}>0</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(\".\")}>.</button>\r\n                    <button className=\"col m-1 calcButton\" id=\"equalSign\" onClick={() => returnResult(field)}>=</button>\r\n                    <button className=\"col m-1 calcButton\" onClick={() => typeIn(\"/\")}>/</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectedTTT } from '../store/actions';\r\nimport { activateSnake } from '../store/actions';\r\nimport { activateCalc } from '../store/actions';\r\nimport { activatePathFinder } from '../store/actions';\r\nimport PathFinder from '../algorithms/pathfinder/PathFinder';\r\nimport TicTacToe from '../games/tic_tac_toe/Tic_Tac_Toe';\r\nimport Snake from '../games/snake/Snake';\r\nimport Calculator from '../other/calculator/Calculator';\r\n\r\n\r\n\r\n\r\nconst selecetionStyle = {\r\n  height: \"400px\",\r\n  marginTop: \"200px\"\r\n}\r\n\r\nconst projectOne = {\r\n  height: \"175px\",\r\n  width: \"200px\",\r\n  margin: \"20px\",\r\n  outline: \"none\",\r\n  justifyContent: \"center\",\r\n  borderRadius: \"5px\",\r\n  color: \"#4dffa6\",\r\n  border: \"2px solid #4dffa6\",\r\n  backgroundColor: \"white\"\r\n\r\n}\r\n\r\nconst projectTwo = {\r\n  height: \"175px\",\r\n  width: \"200px\",\r\n  margin: \"20px\",\r\n  outline: \"none\",\r\n  justifyContent: \"center\",\r\n  borderRadius: \"5px\",\r\n  color: \"#66ccff\",\r\n  border: \"2px solid #66ccff\",\r\n  backgroundColor: \"white\"\r\n\r\n}\r\n\r\nconst projectThree = {\r\n  height: \"175px\",\r\n  width: \"200px\",\r\n  margin: \"20px\",\r\n  outline: \"none\",\r\n  justifyContent: \"center\",\r\n  borderRadius: \"5px\",\r\n  color: \"#ff3333\",\r\n  border: \"2px solid #ff3333\",\r\n  backgroundColor: \"white\"\r\n}\r\n\r\n\r\nconst projectFour = {\r\n  height: \"175px\",\r\n  width: \"200px\",\r\n  margin: \"20px\",\r\n  outline: \"none\",\r\n  justifyContent: \"center\",\r\n  borderRadius: \"5px\",\r\n  color: \"#6600ff\",\r\n  border: \"2px solid #6600ff\",\r\n  backgroundColor: \"white\"\r\n}\r\n\r\n\r\nconst itemHeaderStyle = {\r\n  marginTop: \"30%\"\r\n}\r\n\r\nconst projectWindow = {\r\n  marginTop: \"75px\",\r\n}\r\n\r\n\r\n\r\nfunction ProjectSelection(props) {\r\n  if (props.projectChoices) {\r\n    return (\r\n      // --------------- CONTAINER---------->\r\n      <div className=\"d-flex justify-content-center \">\r\n\r\n        <div style={selecetionStyle} className=\"w-50 row \">\r\n\r\n          {/*--------------------------------------------------------\r\n            -######################################################- \r\n            -                        TIC TAC TOE                   - \r\n            -######################################################-  \r\n            --------------------------------------------------------*/}\r\n\r\n          <button onClick={props.selectedTTT} style={projectOne}  >\r\n            <h4 style={itemHeaderStyle} >TIC TAC TOE</h4>\r\n          </button>\r\n\r\n          {/*--------------------------------------------------------\r\n            -######################################################- \r\n            -                         SNAKE                      - \r\n            -######################################################-  \r\n            --------------------------------------------------------*/}\r\n\r\n          <button onClick={props.activateSnake} style={projectTwo} >\r\n            <h4 style={itemHeaderStyle} >SNAKE</h4>\r\n          </button>\r\n\r\n\r\n          {/*--------------------------------------------------------\r\n            -######################################################- \r\n            -                      CALCULATOR                      - \r\n            -######################################################-  \r\n            --------------------------------------------------------*/}\r\n\r\n          <button onClick={props.activateCalc} style={projectThree} >\r\n            <h4 style={itemHeaderStyle} >CALCULATOR</h4>\r\n          </button>\r\n\r\n\r\n          {/*--------------------------------------------------------\r\n            -######################################################- \r\n            -                     PATH FINDER                      - \r\n            -######################################################-  \r\n            --------------------------------------------------------*/}\r\n\r\n          <button onClick={props.activatePathFinder} style={projectFour} >\r\n            <h4 style={itemHeaderStyle} >PATH FINDER</h4>\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (props.tttSelected) {\r\n    return (\r\n      <div style={projectWindow} className=\"d-flex justify-content-center\">\r\n        <TicTacToe selectedTTT={props.selectedTTT} />\r\n      </div>\r\n    )\r\n  }\r\n  if (props.snakeActive) {\r\n    return (\r\n      <div style={projectWindow} className=\"d-flex justify-content-center\">\r\n        <Snake activateSnake={props.activateSnake} />\r\n      </div>\r\n    )\r\n  }\r\n  if (props.calcActive) {\r\n    return (\r\n      <div style={projectWindow} className=\"d-flex justify-content-center\">\r\n        <Calculator activateCalc={props.activateCalc} />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  if (props.pathFinderActive) {\r\n    return (\r\n      <div style={projectWindow} className=\"d-flex justify-content-center\">\r\n        <PathFinder activatePathFinder={props.activatePathFinder} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projectChoices: state.project.projectChoices,\r\n    tttSelected: state.project.tttSelected,\r\n    snakeActive: state.project.snakeActive,\r\n    calcActive: state.project.calcActive,\r\n    pathFinderActive: state.project.pathFinderActive,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    selectedTTT: () => dispatch(selectedTTT()),\r\n    activateSnake: () => dispatch(activateSnake()),\r\n    activateCalc: () => dispatch(activateCalc()),\r\n    activatePathFinder: () => dispatch(activatePathFinder()),\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectSelection)\r\n\r\n\r\n\r\n\r\n\r\n","import {PROJECT_SELECT}from './actionTypes';\r\nimport {ABOUT_ME_SELECT} from './actionTypes';\r\nimport {TTT_SELECT} from './actionTypes';\r\nimport {CONTACT_SELECT} from './actionTypes';\r\nimport {SHOW_SNAKE} from './actionTypes';\r\nimport {SHOW_CALC} from './actionTypes';\r\nimport {SHOW_PATH_FIND} from './actionTypes';\r\n\r\n\r\nconst projectSelected = () => {\r\n    return  {\r\n        type: PROJECT_SELECT,\r\n    }\r\n}\r\n\r\nconst aboutMeSelected = () => {\r\n    return  {\r\n        type: ABOUT_ME_SELECT,\r\n    }\r\n}\r\n\r\nconst contactSelected = () => {\r\n    return  {\r\n        type: CONTACT_SELECT,\r\n    }\r\n}\r\n\r\nconst selectedTTT = () => {\r\n    return  {\r\n        type: TTT_SELECT,\r\n    }\r\n}\r\n\r\nconst activateSnake = () => {\r\n    return  {\r\n        type: SHOW_SNAKE,\r\n    }\r\n}\r\n\r\nconst activateCalc = () => {\r\n    return  {\r\n        type: SHOW_CALC,\r\n    }\r\n}\r\n\r\nconst activatePathFinder = () => {\r\n    return  {\r\n        type: SHOW_PATH_FIND,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport {projectSelected};\r\nexport {aboutMeSelected};\r\nexport {contactSelected};\r\nexport {selectedTTT};\r\nexport {activateSnake};\r\nexport {activateCalc};\r\nexport {activatePathFinder};","const PROJECT_SELECT = \"PROJECT_SELECT\";\r\nconst ABOUT_ME_SELECT = \"ABOUTME_SELECT\";\r\nconst CONTACT_SELECT = \"CONTACT_SELECT\";\r\nconst TTT_SELECT = \"TTT_SELECT\"\r\nconst SHOW_SNAKE = \"SHOW_SNAKE\";\r\nconst SHOW_CALC = \"SHOW_CALC\";\r\nconst SHOW_PATH_FIND = \"SHOW_PATH_FIND\"\r\n\r\nexport {PROJECT_SELECT};\r\nexport {ABOUT_ME_SELECT};\r\nexport {TTT_SELECT};\r\nexport {SHOW_SNAKE};\r\nexport {SHOW_CALC};\r\nexport {CONTACT_SELECT};\r\nexport {SHOW_PATH_FIND};\r\n","import React from 'react';\r\nimport './stylings/aboutMeStyle.css'\r\n\r\n\r\n\r\nconst showContact = () => {\r\n  let contact = document.getElementById(\"contacts\")\r\n  if (contact.className === \"contact-div\") {\r\n    contact.className = \"show-contact-div\";\r\n  } else if (contact.className === \"show-contact-div\") {\r\n    contact.className = \"contact-div\";\r\n  }\r\n}\r\n\r\n\r\nfunction AboutMeSection(props) {\r\n  console.log(props)\r\n  return (\r\n    // --------------- CONTAINER---------->\r\n    <div className=\"\">\r\n      <div className=\"text-center head\">\r\n        <h1>Hi, I´m Michele Ayadi</h1>\r\n        <h6>My goal is to become a Fullstack Web developer...</h6>\r\n      </div>\r\n      <div className=\"text-center introConntainer\">\r\n        <h6 className=\"mt-2 introHeader\">How I got into in Coding?</h6>\r\n        <p>It was about 2016 when I saw a programmer on Youtube\r\n        how he recorded himself while he was coding.\r\n        I always wanted to earn a living with something creative but be mentally challenging.\r\n        As I watched how he coded this purple rain like animation with a JavaScript library\r\n        called P5.JS, I was fascinated! I saw how he solved multiple problems\r\n        on his way to get the creative output he wanted. I knew I wanted\r\n        to learn to code. And now I want to earn a living with it!\r\n            </p>\r\n      </div>\r\n      <div className=\"text-center me-container\">\r\n        <div className=\"me\"></div>\r\n        <p className=\"quest\">?</p>\r\n\r\n        <div className=\"contact-container\">\r\n          <p className=\"m-1\">How does your future employee look?</p>\r\n          <button onClick={showContact} className=\"contactLink m-1\">Contact Me</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"contact-div\" id=\"contacts\">\r\n        <a href={\"https://www.linkedin.com/in/michele-ayadi-6673b61a0/\"}target={\"#\"}><div className=\"linkedin link\" ></div></a>\r\n        <a href={\"https://github.com/AyMichele\"}target={\"#\"}> <div className=\"github link\"></div></a>\r\n        <a href={\"mailto:michele.ayadi@gmail.com\"}><div className=\"mail link\"></div></a>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default AboutMeSection;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { projectSelected } from '../store/actions';\r\nimport { aboutMeSelected } from '../store/actions';\r\nimport { contactSelected } from '../store/actions';\r\nimport ProjectSelection from './projectSelection';\r\nimport AboutMeSection from './aboutMe';\r\nimport ContactSection from './ContactSection';\r\nimport './stylings/selectionMaskStyle.css'\r\n\r\nfunction Selection(props) {\r\n  let selectedSection = undefined;\r\n  if (props.showAboutMeSection) {\r\n    selectedSection =\r\n      <div>\r\n        <AboutMeSection projectSelected={props.aboutMeSelected} contactSelected={props.contactSelected}/>\r\n      </div>\r\n  } if (props.showProjectSection) {\r\n    selectedSection =\r\n      <div>\r\n        <ProjectSelection projectSelected={props.projectSelected} />\r\n      </div>\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"navBar\">\r\n        <button onClick={props.projectSelected} className=\"navButtonStyle\">Projects</button>\r\n        <button onClick={props.aboutMeSelected} className=\"navButtonStyle\">About Me</button>\r\n      </div>\r\n      {selectedSection}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showProjectSection: state.selection.showProjectSection,\r\n    showAboutMeSection: state.selection.showAboutMeSection,\r\n    showContanctSection: state.selection.showContanctSection,\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    projectSelected: () => dispatch(projectSelected()),\r\n    aboutMeSelected: () => dispatch(aboutMeSelected()),\r\n    contactSelected: () => dispatch(contactSelected()),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Selection)\r\n\r\n\r\n","import React from 'react';\r\nimport Selection from './selectionWindow/selectionMask';\r\nimport './index.css';\r\n\r\n\r\nconst selectionStyle = {\r\n  height: \"100vh\",\r\n  width: \"100%\",\r\n  position: \"absolute\",\r\n  top: \"0px\",\r\n}\r\n\r\nconst appStyle = {\r\n  overflow: \"hidden\",\r\n  \r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <div style={appStyle}>\r\n        <div style={selectionStyle} >\r\n          <Selection />    \r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { PROJECT_SELECT } from '../actionTypes';\r\nimport { ABOUT_ME_SELECT } from '../actionTypes';\r\nimport { CONTACT_SELECT } from '../actionTypes';\r\n\r\nconst selectionInitialState = {\r\n    showAboutMeSection: true,\r\n    showProjectSection: false,\r\n    showContactSection: false\r\n}\r\n\r\n\r\nfunction selectionReducer(state = selectionInitialState, action) {\r\n    switch (action.type) {\r\n        case PROJECT_SELECT:\r\n            return {\r\n                ...state,\r\n                showAboutMeSection: false,\r\n                showProjectSection: true,\r\n                showContactSection: false,\r\n            }\r\n        case ABOUT_ME_SELECT:\r\n            return {\r\n                ...state,\r\n                showAboutMeSection: true,\r\n                showProjectSection: false,\r\n                showContactSection: false,\r\n            }\r\n        case CONTACT_SELECT:\r\n            return {\r\n                ...state,\r\n                showContactSection: true,\r\n                showProjectSection: false,\r\n                showAboutMeSection: false,\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport { selectionReducer };","\r\nimport { TTT_SELECT } from '../actionTypes';\r\nimport { SHOW_SNAKE } from '../actionTypes';\r\nimport { SHOW_CALC } from '../actionTypes';\r\nimport { SHOW_PATH_FIND } from '../actionTypes';\r\n\r\nconst projectSelectionInitialState = {\r\n    projectChoices: true,\r\n    tttSelected: false,\r\n    snakeActive: false,\r\n    calcActive: false,\r\n    pathFinderActive: false,\r\n}\r\n\r\n\r\nfunction projectSelectionReducer(state = projectSelectionInitialState, action) {\r\n    switch (action.type) {\r\n        case TTT_SELECT:\r\n            return {\r\n                ...state,\r\n                projectChoices: !state.projectChoices,\r\n                tttSelected: !state.tttSelected,\r\n            }\r\n        case SHOW_SNAKE:\r\n            return {\r\n                ...state,\r\n                projectChoices: !state.projectChoices,\r\n                snakeActive: !state.snakeActive,\r\n            }\r\n        case SHOW_CALC:\r\n            return {\r\n                ...state,\r\n                projectChoices: !state.projectChoices,\r\n                calcActive: !state.calcActive,\r\n            }\r\n        case SHOW_PATH_FIND:\r\n            return {\r\n                ...state,\r\n                projectChoices: !state.projectChoices,\r\n                pathFinderActive: !state.pathFinderActive,\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport { projectSelectionReducer };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { createStore, combineReducers } from 'redux';\r\nimport {Provider} from 'react-redux'\r\nimport {selectionReducer} from './store/reducers/selectionReducer';\r\nimport {projectSelectionReducer} from './store/reducers/projectSelectionReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  project:  projectSelectionReducer, \r\n  selection: selectionReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer);\r\nconsole.log(store.getState())\r\n\r\n\r\nReactDOM.render(<Provider store={store}>\r\n  <App />\r\n</Provider>,\r\n  document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}